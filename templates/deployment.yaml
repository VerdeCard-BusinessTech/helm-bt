apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.projectName }}
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: {{ .Values.projectName }}
    qcloud-app: {{ .Values.projectName }}
spec:
  {{- with .Values.container }}
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      k8s-app: {{ $.Values.projectName }}
      qcloud-app: {{ $.Values.projectName }}
  template:
    metadata:
      labels:
        k8s-app: {{ $.Values.projectName }}
        qcloud-app: {{ $.Values.projectName }}
    spec:
      containers:
      - name: {{ $.Values.projectName }}
        image: {{ .image.path }}
        imagePullPolicy: {{ .image.pullPolicy }}
        {{- if hasKey . "args" }}
        args:
          {{- range .args }}
          - {{ . | quote }}
          {{- end }}
        {{- end }}
        {{- if eq .livenessProbe.enabled true }}
        env:
          {{- range $env := .env }}
          {{- range $key, $value := $env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
        livenessProbe:
          {{- if eq .livenessProbe.httpGet.enabled true }}
          httpGet:
            path: {{ .livenessProbe.httpGet.path }}
            port: {{ .livenessProbe.httpGet.port }}
          {{- end }}
          initialDelaySeconds: {{ .livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .livenessProbe.periodSeconds }}
          failureThreshold: {{ .livenessProbe.failureThreshold }}
        {{- end }}
        {{- if eq .readinessProbe.enabled true }}
        readinessProbe:
          {{- if eq .readinessProbe.httpGet.enabled true }}
          httpGet:
            path: {{ .readinessProbe.httpGet.path }}
            port: {{ .readinessProbe.httpGet.port }}
          {{- end }}
          initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .readinessProbe.periodSeconds }}
          successThreshold: {{ .readinessProbe.successThreshold }}
          failureThreshold: {{ .readinessProbe.failureThreshold }}
        {{- end }}
        ports:
        {{- range .ports }}
        - name: {{ .name }}
          containerPort: {{ .containerPort }}
          protocol: {{ .protocol }}
        {{- end }}
        {{- if eq .resources.enabled true }}
        resources:
          limits:
            cpu: {{ .resources.limits.cpu }}
            memory: {{ .resources.limits.memory }}
          requests:
            cpu: {{ .resources.requests.cpu }}
            memory: {{ .resources.requests.memory }}
        {{- end }}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      {{- if and (.image.pullSecrets) (not (empty .image.pullSecrets)) }}
      imagePullSecrets:
      - name: {{ .image.pullSecrets }}
      {{- end }}
      restartPolicy: {{ .restartPolicy }}
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
  {{- if eq .strategy.enabled true }}
  strategy:
    type: {{ .strategy.type }}
    {{- if eq .strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .strategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  {{- end }}

  {{- end }}
